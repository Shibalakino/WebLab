@using Microsoft.AspNetCore.Identity
@using MessagingApp.Areas.Identity.Data

@inject SignInManager<MessagingAppUser> SignInManager
@inject UserManager<MessagingAppUser> UserManager

@model IEnumerable<MessagingApp.Models.Message>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SenderName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RecieverName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @if (SignInManager.IsSignedIn(User))
                {
                    <a onclick="showInPopup(
                '@Url.Action("AddOrEdit", "Home", null, Context.Request.Scheme)',
                'New message')"
                       class="btn btn-success text-white">
                        New message
                    </a>
                }
                </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (SignInManager.IsSignedIn(User))
            {
                if (item.SenderName == @UserManager.GetUserName(User)
                    || item.RecieverName == @UserManager.GetUserName(User))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SenderName) 
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RecieverName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                        <td>
                            <form asp-action="Delete" asp-route-id="@item.Id"
                                  onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </form>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SenderName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RecieverName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    <td>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>